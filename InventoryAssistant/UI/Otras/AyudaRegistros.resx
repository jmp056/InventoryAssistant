<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label4.Text" xml:space="preserve">
    <value>Atreves de este registro se pueden realizar los que son las facturas del negocio, está compuesto por muchos componentes, algunos de
ellos obligatorias, es decir que no pueden estar en blanco para que la factura pueda ser almacenada, en este registro también los usuarios
que tenga la autorización podrán buscar facturas ya realizadas para visualizar algunos detalles de esta y/o con fines de modificarlas, 
este registro posee la peculiaridad que posee un botón el cual lleva a una consulta en la cual puedes seleccionar un producto y
traerlo al registro de la factura, para si se desea agregarlo a esta.
</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>En este registro, los usuarios que estén autorizados a hacer uso de él podrán realizar lo que es la entrada de productos al inventario,
este también posee un botón que lleva a una consulta de productos, para que el producto el cual se desea realizar la entrada sea
seleccionado y de esta manera se pueda realizar la tarea de una manera as fácil, en este registro se pueden buscar entradas anteriores
sea para ver alguna información en específico y/o modificarla.
</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Los usuarios que tienen acceso a este registro pueden ingresar al sistema nuevos productos, al igual que buscar productos ya existentes
por el código para obtener más información sobre ello o para modificarlos, en este registro también, si el usuario está autorizado puede
modificar la cantidad del producto que esta seleccionado, en caso de que haya visto un error en el control del inventario o exista alguna
perdida de un producto que se encuentra registrado.</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>En el registro de Categorías, los usuarios que tienen autorización a ingresar a él pueden realizar lo que es el registro de nuevas categorías
de productos y modificar categorías ya existentes, que han sido agregadas con anterioridad al sistema por usuarios de este.</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>Los usuarios que tienen acceso a este registro pueden realizar tareas como agrega nuevos usuarios para que puedan ingresar al sistema,
modificar usuarios ya existentes y de igual manera también pueden ser eliminados, se puede decir que este registro es el más completo
del sistema, ya que es el más exigente de todos en cuanto a la calidad de la información ingresada a la hora de registrar un nuevo usuario
y/o modificar un usuario existente.</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>En este registro se lleva a cabo lo que es el cuadre de caja diario de lo que se facturo en un periodo de un día, este posee un desglose
de efectivo y un detalle de todas las facturas que se realizaron, para poder realizar la búsqueda de cuadres de caja de días anteriores
basta con que los usuarios que tienen acceso a realizar esa tarea cambien la fecha a la que desean ver su cuadre, y si desea verificar
una factura de las que se realizaron ese día, basta con dar dos clics a la factura en lo que es el detalle de facturas.</value>
  </data>
</root>