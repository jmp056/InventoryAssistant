<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MyErrorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>50</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EARBcIj/ASL2C77EnX5aAAAAAElFTkSuQmCC
</value>
  </data>
</root>