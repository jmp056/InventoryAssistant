<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MyErrorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>480, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XKGv5f8B5FO6I4wj2GkAAAAASUVORK5CYII=
</value>
  </data>
</root>