<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MyErrorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>35</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>