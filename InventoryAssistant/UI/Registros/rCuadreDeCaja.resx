<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="GuardarButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAGXRF
        WHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAA2xJREFUOE+FldlPE1EchfkPjBtCW0o77VBb
        BJFIVCitEsW4BOOCRNoCxWg0ArKqlULBF9RXjQouIJtBo9AWFbESTYxv4AtPQHAhsgkJhE2QeLy/C7Ik
        Um7ypZnmnG/ukpnxUUglt9RKcVYUREh8fRGs0UArBkEjqBkqzma1iBCtDn7rN2Br8BYIcjmEQAEKmaxT
        HSgP8Fk61Er17Jmrz5F6uQ6CKgw/B/ux0ojYFo7+4RGcP3cWhxIdOGJxQCmVdImKwEWpqFTBmlcLS9Zj
        SGUafO3uwszMDMbHxzE2NsaZnJzkwmDNZnzp6UVqigWxx/OQklONuEQ7lBL/RalaIcCaWw1zZjkk0iB0
        d3VgamoKo6OjGBkZ4ZCcBm1F9/cfsCabsfdoNiwXHyI5q4JJ87mUL/+f0JJZAVmABj3fvrDqH0xPTzN+
        cWZnf3NhqE6H7739OG1Nwr5jOTCn32eUzklNdrDz6OTCFC4sh0Khw7MnlXjf8hbvmpvgaX7NafE049PH
        D2yGKtQ9fYq4A7HYfzwHpvQyJKbdhTmjjG1bDUR2kPPCKj59434rdKEGaIL1ELVRjEhOkC4K2hADQrbF
        IDQ8BmHhe3Ai9SZMaaVIvHCHie+x/awCueaE7ILuYs5gS2Di//OIr8KSyX7pmuVNaff4DE1s2Sk5lV6E
        GavxACYGz7NlU3f5DJcseYcxARHR8diuP+EVylCWOtQlxxIhOxR2UvJN61BV8QD3S++g7O5tr1CGstSh
        LjkWhNbcGiRlsT2QyzA5MYHhoWH2xAwuMDjwj4F5BllmiGepQ11yLBdmV8F37RocjI1FjMEIoz56AUOU
        HvpdkYjcsZOj37kLu6MNPEsd6v5XqJT6w/O2GY2NbrhczjmcTjTU1+NzWxufVV9fHzo7OuBsaGDZN7yz
        olC2aSNuXi/BtaJiFBU6OI6CQhTk2/Gkthbt7e1oa23Fm6YmFNoLcKOkhHe8C1nomqOYiUg2J6Sy3ZYP
        2+UrnHzbVX6zVYXsWYTH44H75Ss43Y1LcMPpcqPB5ZrHDXfjS56lzjIhf31dqkUy+8PPdyMSzEmIO2nC
        4fhTXqEMZalDXXKQa/4F+wKptufQBkgAmxHTeQZM5UZ7hTKUpQ51yUGuxU+ASgOZvwQRooAwlRKhgnco
        Q1nqUJccCqnk1l8or4fX1Ix2kgAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>